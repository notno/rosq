def {reverseFun} (\ {args body} {def (head args) (\ (list (tail (tail args)) (head (tail args))) body)})


// A simpler way to define functions
def {fun} (\ {args body} {def (head args) (\ (tail args) body)})

// Curry
fun {curry f xs} {eval (join (list f) xs)}

// Uncurry
fun {uncurry f & xs} {f xs}

// Second in a list
fun {second list} {head (tail list)}

// Uncurried head function
def {head-uncurried} (\ {& i} {head i})
// OR
def {head-uncurried} (eval (uncurry head))

// Length of a list, using recursion
fun {len l} { if (== l {}) {0} {+ 1 (len (tail l))}}

// Reverse a list, using recursion
fun {reverse l} {if (== l {}) {{}} {join (reverse (tail l)) (head l)}}
